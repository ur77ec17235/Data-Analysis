{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "476af924",
   "metadata": {},
   "source": [
    "# Phân tích xu hướng và dự đoán số lượng học viên đăng ký (Number_of_enroll) trên Edumall\n",
    "\n",
    "Notebook này thực hiện phân tích dữ liệu và xây dựng mô hình dự đoán số lượng học viên đăng ký dựa trên các trường dữ liệu khác trong file `edumall_cleaned4.csv`.\n",
    "\n",
    "**Outline:**\n",
    "1. Tải và làm sạch dữ liệu\n",
    "2. Khám phá phân phối Number_of_enroll\n",
    "3. Phân tích mối quan hệ giữa Number_of_enroll và các trường số liệu\n",
    "4. Phân tích Number_of_enroll theo nhóm danh mục (Topic, Author)\n",
    "5. Phân tích xu hướng Number_of_enroll theo Năm và Tháng cập nhật\n",
    "6. Tạo đặc trưng mới từ Coursename và Target\n",
    "7. Mã hóa đặc trưng văn bản và danh mục\n",
    "8. Xây dựng và huấn luyện mô hình hồi quy dự đoán Number_of_enroll\n",
    "9. Đánh giá mô hình và phân tích tầm quan trọng đặc trưng"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "34cea13e",
   "metadata": {},
   "source": [
    "## 1. Tải và làm sạch dữ liệu\n",
    "\n",
    "- Đọc dữ liệu từ file CSV\n",
    "- Loại bỏ các cột không cần thiết (`Unnamed: 0`, `_id`)\n",
    "- Xử lý cột `Last_updated` để trích xuất năm và tháng\n",
    "- Làm sạch và chuyển đổi cột `Target`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4fe0e288",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "# Đọc dữ liệu\n",
    "df = pd.read_csv('/Users/hongviet/Documents/GitHub/Data-Analysis/GroupTask/edumall_cleaned4.csv')\n",
    "\n",
    "# Loại bỏ các cột không cần thiết\n",
    "for col in ['Unnamed: 0', '_id']:\n",
    "    if col in df.columns:\n",
    "        df = df.drop(col, axis=1)\n",
    "\n",
    "# Xử lý cột Last_updated\n",
    "df['Last_updated'] = pd.to_datetime(df['Last_updated'], errors='coerce')\n",
    "df['Year_updated'] = df['Last_updated'].dt.year\n",
    "df['Month_updated'] = df['Last_updated'].dt.month\n",
    "\n",
    "# Làm sạch cột Target (nếu là dạng list hoặc có ký tự đặc biệt)\n",
    "if 'Target' in df.columns:\n",
    "    df['Target'] = df['Target'].astype(str).str.replace(r'[\\[\\]\\']', '', regex=True)\n",
    "    df['Target'] = df['Target'].str.strip()\n",
    "\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0532407d",
   "metadata": {},
   "source": [
    "## 2. Khám phá phân phối Number_of_enroll\n",
    "\n",
    "- Vẽ histogram và boxplot cho Number_of_enroll để kiểm tra phân phối và phát hiện outlier."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "31343058",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "plt.figure(figsize=(12, 5))\n",
    "plt.subplot(1, 2, 1)\n",
    "sns.histplot(df['Number_of_enroll'], bins=30, kde=True)\n",
    "plt.title('Histogram of Number_of_enroll')\n",
    "\n",
    "plt.subplot(1, 2, 2)\n",
    "sns.boxplot(y=df['Number_of_enroll'])\n",
    "plt.title('Boxplot of Number_of_enroll')\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "# Thống kê mô tả\n",
    "df['Number_of_enroll'].describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1d0772e7",
   "metadata": {},
   "source": [
    "## 3. Phân tích mối quan hệ giữa Number_of_enroll và các trường số liệu\n",
    "\n",
    "- Vẽ scatter plot và tính hệ số tương quan giữa Number_of_enroll và các trường số liệu như Lectures, Newfee, Oldfee, Rating, Sections, Time."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "34453bcf",
   "metadata": {},
   "outputs": [],
   "source": [
    "numeric_cols = ['Lectures', 'Newfee', 'Oldfee', 'Rating', 'Sections', 'Time']\n",
    "plt.figure(figsize=(18, 10))\n",
    "for i, col in enumerate(numeric_cols):\n",
    "    plt.subplot(2, 3, i+1)\n",
    "    sns.scatterplot(x=df[col], y=df['Number_of_enroll'])\n",
    "    plt.xlabel(col)\n",
    "    plt.ylabel('Number_of_enroll')\n",
    "    plt.title(f'{col} vs Number_of_enroll')\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "# Ma trận tương quan\n",
    "corr = df[numeric_cols + ['Number_of_enroll']].corr()\n",
    "print(corr['Number_of_enroll'].sort_values(ascending=False))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f277880d",
   "metadata": {},
   "source": [
    "## 4. Phân tích Number_of_enroll theo nhóm danh mục (Topic, Author)\n",
    "\n",
    "- Vẽ boxplot hoặc barplot để so sánh Number_of_enroll giữa các nhóm Topic và các tác giả (Author) có số lượng khóa học lớn nhất."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4d8f22fe",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Theo Topic\n",
    "plt.figure(figsize=(14, 6))\n",
    "order = df.groupby('Topic')['Number_of_enroll'].mean().sort_values(ascending=False).index\n",
    "sns.boxplot(x='Topic', y='Number_of_enroll', data=df, order=order)\n",
    "plt.xticks(rotation=45)\n",
    "plt.title('Number_of_enroll theo Topic')\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "# Theo Author (top 10 tác giả nhiều khóa học nhất)\n",
    "top_authors = df['Author'].value_counts().nlargest(10).index\n",
    "plt.figure(figsize=(14, 6))\n",
    "sns.boxplot(x='Author', y='Number_of_enroll', data=df[df['Author'].isin(top_authors)], order=top_authors)\n",
    "plt.xticks(rotation=45)\n",
    "plt.title('Number_of_enroll theo Top 10 Author')\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1f8da345",
   "metadata": {},
   "source": [
    "## 5. Phân tích xu hướng Number_of_enroll theo Năm và Tháng cập nhật\n",
    "\n",
    "- Vẽ lineplot hoặc boxplot để xem xu hướng Number_of_enroll theo năm và tháng cập nhật khóa học."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6ad6cf68",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Theo năm cập nhật\n",
    "plt.figure(figsize=(10, 5))\n",
    "sns.boxplot(x='Year_updated', y='Number_of_enroll', data=df)\n",
    "plt.title('Number_of_enroll theo Năm cập nhật')\n",
    "plt.show()\n",
    "\n",
    "# Theo tháng cập nhật\n",
    "plt.figure(figsize=(10, 5))\n",
    "sns.boxplot(x='Month_updated', y='Number_of_enroll', data=df)\n",
    "plt.title('Number_of_enroll theo Tháng cập nhật')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7168e313",
   "metadata": {},
   "source": [
    "## 6. Tạo đặc trưng mới từ Coursename và Target\n",
    "\n",
    "- Tạo các đặc trưng như độ dài tên khóa học, số lượng mục tiêu học tập, độ dài mô tả mục tiêu từ Coursename và Target.\n",
    "- Phân tích mối quan hệ của các đặc trưng này với Number_of_enroll."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6f909a20",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Độ dài tên khóa học\n",
    "df['Coursename_length'] = df['Coursename'].astype(str).apply(len)\n",
    "\n",
    "# Số lượng mục tiêu học tập (giả sử Target là chuỗi các mục tiêu phân tách bằng dấu phẩy)\n",
    "df['Target_count'] = df['Target'].apply(lambda x: len(str(x).split(',')) if pd.notnull(x) else 0)\n",
    "\n",
    "# Độ dài mô tả mục tiêu\n",
    "df['Target_length'] = df['Target'].astype(str).apply(len)\n",
    "\n",
    "# Phân tích mối quan hệ với Number_of_enroll\n",
    "feature_new = ['Coursename_length', 'Target_count', 'Target_length']\n",
    "plt.figure(figsize=(15, 4))\n",
    "for i, col in enumerate(feature_new):\n",
    "    plt.subplot(1, 3, i+1)\n",
    "    sns.scatterplot(x=df[col], y=df['Number_of_enroll'])\n",
    "    plt.xlabel(col)\n",
    "    plt.ylabel('Number_of_enroll')\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "df[feature_new + ['Number_of_enroll']].corr()['Number_of_enroll']"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ae89b46a",
   "metadata": {},
   "source": [
    "## 7. Mã hóa đặc trưng văn bản và danh mục\n",
    "\n",
    "- Chuyển đổi Coursename và Target thành vector số bằng TF-IDF\n",
    "- Mã hóa các biến danh mục như Topic, Author bằng OneHotEncoder"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6c44ab16",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.feature_extraction.text import TfidfVectorizer\n",
    "from sklearn.preprocessing import OneHotEncoder\n",
    "\n",
    "# TF-IDF cho Coursename và Target\n",
    "tfidf_coursename = TfidfVectorizer(max_features=50)\n",
    "coursename_tfidf = tfidf_coursename.fit_transform(df['Coursename'].astype(str)).toarray()\n",
    "coursename_tfidf_df = pd.DataFrame(coursename_tfidf, columns=[f'CN_TFIDF_{i}' for i in range(coursename_tfidf.shape[1])])\n",
    "\n",
    "tfidf_target = TfidfVectorizer(max_features=50)\n",
    "target_tfidf = tfidf_target.fit_transform(df['Target'].astype(str)).toarray()\n",
    "target_tfidf_df = pd.DataFrame(target_tfidf, columns=[f'TG_TFIDF_{i}' for i in range(target_tfidf.shape[1])])\n",
    "\n",
    "# One-hot encoding cho Topic và Author\n",
    "ohe = OneHotEncoder(sparse=False, handle_unknown='ignore')\n",
    "cat_features = df[['Topic', 'Author']].astype(str)\n",
    "cat_ohe = ohe.fit_transform(cat_features)\n",
    "cat_ohe_df = pd.DataFrame(cat_ohe, columns=ohe.get_feature_names_out(['Topic', 'Author']))\n",
    "\n",
    "# Gộp tất cả đặc trưng\n",
    "X = pd.concat([\n",
    "    df[numeric_cols + feature_new + ['Year_updated', 'Month_updated']],\n",
    "    coursename_tfidf_df,\n",
    "    target_tfidf_df,\n",
    "    cat_ohe_df\n",
    "], axis=1)\n",
    "y = df['Number_of_enroll']"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5f1964d3",
   "metadata": {},
   "source": [
    "## 8. Xây dựng và huấn luyện mô hình hồi quy dự đoán Number_of_enroll\n",
    "\n",
    "- Chia tập dữ liệu, huấn luyện mô hình hồi quy (RandomForestRegressor), dự đoán Number_of_enroll và đánh giá hiệu suất bằng các chỉ số MSE, R2, MAE."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0dcdde1c",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import mean_squared_error, r2_score, mean_absolute_error\n",
    "\n",
    "# Chia dữ liệu train/test\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
    "\n",
    "# Huấn luyện mô hình\n",
    "rf = RandomForestRegressor(n_estimators=100, random_state=42)\n",
    "rf.fit(X_train, y_train)\n",
    "\n",
    "# Dự đoán\n",
    "y_pred = rf.predict(X_test)\n",
    "\n",
    "# Đánh giá\n",
    "mse = mean_squared_error(y_test, y_pred)\n",
    "r2 = r2_score(y_test, y_pred)\n",
    "mae = mean_absolute_error(y_test, y_pred)\n",
    "\n",
    "print(f\"MSE: {mse:.4f}\")\n",
    "print(f\"R2: {r2:.4f}\")\n",
    "print(f\"MAE: {mae:.4f}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "db52d33e",
   "metadata": {},
   "source": [
    "## 9. Đánh giá mô hình và phân tích tầm quan trọng đặc trưng\n",
    "\n",
    "- Trực quan hóa và phân tích tầm quan trọng của các đặc trưng đầu vào đối với Number_of_enroll để rút ra insight về ảnh hưởng của từng trường."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "77bcfd25",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Lấy tầm quan trọng đặc trưng\n",
    "importances = rf.feature_importances_\n",
    "feature_names = X.columns\n",
    "\n",
    "# Top 20 đặc trưng quan trọng nhất\n",
    "indices = np.argsort(importances)[::-1][:20]\n",
    "plt.figure(figsize=(10, 7))\n",
    "sns.barplot(x=importances[indices], y=feature_names[indices])\n",
    "plt.title('Top 20 Feature Importances for Number_of_enroll')\n",
    "plt.xlabel('Importance')\n",
    "plt.ylabel('Feature')\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "# Hiển thị bảng đặc trưng quan trọng nhất\n",
    "important_features = pd.DataFrame({\n",
    "    'Feature': feature_names[indices],\n",
    "    'Importance': importances[indices]\n",
    "})\n",
    "important_features"
   ]
  }
 ],
 "metadata": {
  "language_info": {
   "name": "python"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
